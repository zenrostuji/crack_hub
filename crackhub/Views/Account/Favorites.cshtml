@model IEnumerable<crackhub.Models.Data.FavoriteGame>

@{
    ViewData["Title"] = "Game yêu thích";
}

@section Styles {
    <link rel="stylesheet" href="~/css/favorites.css" />
}

<div class="container favorites-container">
    <div class="card favorites-card shadow">
        <div class="card-header favorites-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0"><i class="fas fa-heart"></i> Game yêu thích của bạn</h4>
            <a href="@Url.Action("Index", "Game")" class="btn explore-btn btn-sm">
                <i class="fas fa-search me-2"></i> Khám phá thêm game
            </a>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="empty-favorites">
                    <i class="fas fa-heart-broken fa-4x mb-3"></i>
                    <h5>Bạn chưa thêm game nào vào danh sách yêu thích</h5>
                    <p class="text-muted">Hãy khám phá các game và bấm vào biểu tượng trái tim để thêm vào danh sách yêu thích.</p>
                    <a href="@Url.Action("Index", "Game")" class="btn explore-games-btn mt-2">
                        <i class="fas fa-gamepad me-2"></i> Khám phá game ngay
                    </a>
                </div>
            }
            else
            {
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                    @foreach (var favorite in Model)
                    {
                        <div class="col">
                            <div class="card favorite-game-card h-100">
                                <div class="game-img-container position-relative">
                                    <a href="@Url.Action("Details", "Game", new { id = favorite.Game.Id })" class="text-decoration-none">
                                        <img src="@favorite.Game.CoverImageUrl" class="card-img-top" alt="@favorite.Game.Title">
                                    </a>
                                    <div class="position-absolute bottom-0 end-0 p-2">
                                        <span class="badge bg-dark text-white">
                                            <i class="fas fa-download me-1"></i> @favorite.Game.Downloads
                                        </span>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <a href="@Url.Action("Details", "Game", new { id = favorite.Game.Id })" class="text-decoration-none">
                                            @favorite.Game.Title
                                        </a>
                                    </h5>
                                    <p class="card-text small mb-2">
                                        <span class="badge bg-info">@favorite.Game.Category.CategoryName</span>
                                        <span class="badge bg-secondary">@favorite.Game.ReleaseDate?.Year</span>
                                    </p>
                                    <p class="card-text small text-muted">@(favorite.Game.ShortDescription?.Length > 100 ? favorite.Game.ShortDescription.Substring(0, 100) + "..." : favorite.Game.ShortDescription)</p>
                                </div>
                                <div class="card-footer d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar-alt me-1"></i> Đã thêm: @favorite.DateAdded.ToString("dd/MM/yyyy")
                                    </small>
                                    <div>
                                        <a href="@Url.Action("Details", "Game", new { id = favorite.Game.Id })" class="btn btn-action btn-primary" title="Xem chi tiết">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <a href="@Url.Action("RemoveFavorite", "Game", new { id = favorite.Game.Id })" class="btn btn-action btn-danger remove-favorite" 
                                           data-game-id="@favorite.Game.Id" data-game-title="@favorite.Game.Title" title="Xóa khỏi yêu thích">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const removeButtons = document.querySelectorAll('.remove-favorite');
            
            removeButtons.forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    
                    const gameId = this.getAttribute('data-game-id');
                    const gameTitle = this.getAttribute('data-game-title');
                    
                    if (confirm(`Bạn có muốn xóa "${gameTitle}" khỏi danh sách yêu thích?`)) {
                        // Add fade-out animation before removing
                        const gameCard = this.closest('.col');
                        gameCard.style.transition = 'all 0.5s ease';
                        gameCard.style.opacity = '0';
                        gameCard.style.transform = 'scale(0.8)';
                        
                        fetch(this.getAttribute('href'), {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                setTimeout(() => {
                                    // Remove the game card from the UI
                                    gameCard.remove();
                                    
                                    // Show notification using site's existing function if available
                                    if (typeof showNotification === 'function') {
                                        showNotification(`"${gameTitle}" đã được xóa khỏi danh sách yêu thích`, 'success');
                                    }
                                    
                                    // Check if there are no more favorites
                                    const remainingCards = document.querySelectorAll('.col');
                                    if (remainingCards.length === 0) {
                                        // Reload the page to show the empty state
                                        window.location.reload();
                                    }
                                }, 500);
                            }
                        });
                    }
                });
            });
        });
    </script>
}