@model crackhub.Models.Data.User

@{
    ViewData["Title"] = "Profile";
}

@section Styles {
    <link rel="stylesheet" href="~/css/profile.css" />
    <style>
        /* Avatar frame styles */
        .avatar-container {
            position: relative;
            width: 150px;
            height: 150px;
            margin: 0 auto 2rem;
        }

        .avatar-frame {
            position: absolute;
            top: -30px;
            left: -15px;
            width: 180px;
            height: 180px;
            z-index: 2;
            pointer-events: none;
        }

        .profile-avatar {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 50%;
            border: 4px solid white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            position: relative;
            z-index: 1;
        }

        .frame-selector-btn {
            position: absolute;
            bottom: 10px;
            left: 0;
            background: #5d4ec7;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            z-index: 3;
        }

            .frame-selector-btn:hover {
                background: #7e57c2;
                transform: translateY(-3px);
            }

        /* Frame gallery modal styles */
        .frame-gallery-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 9999;
            overflow-y: auto;
            padding: 0;
        }

        .frame-gallery-container {
            width: 800px;
            height: auto;
            margin: 50px auto;
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            position: relative;
            box-sizing: border-box;
        }

        .frame-gallery-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .frame-gallery-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #333;
            margin: 0;
        }

        .frame-gallery-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #666;
            cursor: pointer;
            transition: all 0.3s;
        }

            .frame-gallery-close:hover {
                color: #5d4ec7;
            }

        .frame-items-wrapper {
            position: relative;
            max-height: 400px;
            overflow-y: auto;
            overflow-x: hidden;
            padding-right: 10px;
        }

        .frame-items-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 15px;
            width: 100%;
        }

        .frame-item {
            position: relative;
            border-radius: 8px;
            overflow: hidden;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .frame-item:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(93, 78, 199, 0.2);
            }

            .frame-item.active {
                border: 3px solid #5d4ec7;
            }

            /* Premium frame styling */
            .frame-item.premium {
                background: linear-gradient(45deg, #ffd700, #ffed4e, #ffd700);
                background-size: 400% 400%;
                animation: premiumShimmer 3s ease-in-out infinite;
                border: 2px solid #ffd700;
                box-shadow: 0 4px 15px rgba(255, 215, 0, 0.3);
            }

            .frame-item.premium:hover {
                box-shadow: 0 8px 25px rgba(255, 215, 0, 0.5);
                transform: translateY(-8px);
            }

            .frame-item.premium::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
                animation: premiumSweep 2s ease-in-out infinite;
                z-index: 1;
            }

            .frame-item.premium-locked {
                position: relative;
                background: linear-gradient(45deg, #666, #888, #666);
                background-size: 400% 400%;
                animation: premiumShimmerDim 3s ease-in-out infinite;
                border: 2px solid #888;
                opacity: 0.7;
            }

            .frame-item.premium-locked::after {
                content: '\f023';
                font-family: 'Font Awesome 5 Free';
                font-weight: 900;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                font-size: 2rem;
                color: #ffd700;
                z-index: 3;
                text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
            }

            .frame-item.premium-locked:hover {
                opacity: 0.9;
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(255, 215, 0, 0.3);
            }

        /* Premium animations */
        @@keyframes premiumShimmer {
            0%, 100% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
        }

        @@keyframes premiumShimmerDim {
            0%, 100% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
        }

        @@keyframes premiumSweep {
            0% {
                left: -100%;
            }
            50%, 100% {
                left: 100%;
            }
        }

        .frame-preview {
            position: relative;
            width: 100%;
            padding-bottom: 100%; /* Square aspect ratio */
            background: #f8f9fa;
        }

        .frame-preview-avatar {
            position: absolute;
            width: 75%;
            height: 75%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border-radius: 50%;
            object-fit: cover;
            z-index: 1;
            margin-top: 14px;
        }

       

        .frame-info {
            padding: 10px;
            background: rgba(255, 255, 255, 0.9);
            text-align: center;
        }

        .frame-name {
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 5px;
            color: #333;
        }

        .frame-rarity {
            font-size: 0.8rem;
            color: #888;
        }

            .frame-rarity.common {
                color: #888;
            }

            .frame-rarity.uncommon {
                color: #3caa6e;
            }

            .frame-rarity.rare {
                color: #3c78aa;
            }

            .frame-rarity.epic {
                color: #9c3caa;
            }

            .frame-rarity.legendary {
                color: #aa9c3c;
            }

        .frame-actions {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .unequip-frame-btn {
            background: #666;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 30px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s;
        }

            .unequip-frame-btn:hover {
                background: #555;
                transform: translateY(-2px);
            }

        /* Dark mode toggle styles */
        .dark-mode-toggle {
            position: absolute;
            top: 15px;
            right: 15px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            z-index: 3;
        }

            .dark-mode-toggle:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: rotate(30deg);
            }

        /* Dark mode styles */
        body.dark-mode {
            background-color: #121212;
            color: #e0e0e0;
        }

        .dark-mode .profile-card,
        .dark-mode .activity-card,
        .dark-mode .frame-gallery-container {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }

        .dark-mode .profile-form-control {
            background-color: #2d2d2d;
            border-color: #444;
            color: #e0e0e0;
        }

            .dark-mode .profile-form-control:focus {
                background-color: #333;
                border-color: #5d4ec7;
            }

        .dark-mode .profile-form-group label {
            color: #bbb;
        }

        .dark-mode .password-section-title {
            color: #bbb;
        }

        .dark-mode .profile-nav-tabs .nav-link:not(.active) {
            color: #bbb;
        }

        .dark-mode .profile-list-item {
            background-color: #1e1e1e;
            border-color: #333;
        }

            .dark-mode .profile-list-item:hover {
                background-color: #2a2a2a;
            }

        .dark-mode .frame-gallery-title,
        .dark-mode .frame-name {
            color: #e0e0e0;
        }

        .dark-mode .frame-item {
            background-color: #2d2d2d;
        }

        .dark-mode .frame-gallery-close {
            color: #bbb;
        }

        .dark-mode .empty-state {
            color: #bbb;
        }

        /* Prevent content jumping and ensure stable layout */
        body.modal-open {
            overflow: hidden !important;
        }

        .frame-gallery-modal * {
            box-sizing: border-box !important;
        }

        /* Disable all transitions that might cause layout shifts */
        .frame-gallery-modal .frame-item:hover {
            transform: none !important;
            box-shadow: 0 4px 12px rgba(93, 78, 199, 0.3) !important;
        }

        /* Custom scrollbar for frame gallery */
        .frame-items-wrapper::-webkit-scrollbar {
            width: 8px;
        }

        .frame-items-wrapper::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .frame-items-wrapper::-webkit-scrollbar-thumb {
            background: #5d4ec7;
            border-radius: 10px;
        }

        .frame-items-wrapper::-webkit-scrollbar-thumb:hover {
            background: #7e57c2;
        }

        /* Dark mode scrollbar */
        .dark-mode .frame-items-wrapper::-webkit-scrollbar-track {
            background: #2d2d2d;
        }

        .dark-mode .frame-items-wrapper::-webkit-scrollbar-thumb {
            background: #5d4ec7;
        }

        /* Premium warning modal */
        .premium-warning-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 999999;
            overflow-y: auto;
        }

        .premium-warning-container {
            max-width: 500px;
            margin: 100px auto;
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            text-align: center;
        }

        .premium-warning-icon {
            font-size: 4rem;
            color: #ffd700;
            margin-bottom: 20px;
            animation: premiumPulse 2s ease-in-out infinite;
        }

        .premium-warning-title {
            font-size: 1.8rem;
            font-weight: 700;
            color: #333;
            margin-bottom: 15px;
        }

        .premium-warning-text {
            font-size: 1.1rem;
            color: #666;
            margin-bottom: 25px;
            line-height: 1.6;
        }

        .premium-warning-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
        }

        .premium-upgrade-btn {
            background: linear-gradient(135deg, #ffd700, #ffed4e);
            color: #333;
            border: none;
            padding: 12px 25px;
            border-radius: 30px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
        }

        .premium-upgrade-btn:hover {
            background: linear-gradient(135deg, #ffed4e, #ffd700);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
        }

        .premium-cancel-btn {
            background: #666;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 30px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }

        .premium-cancel-btn:hover {
            background: #555;
            transform: translateY(-2px);
        }

        @@keyframes premiumPulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.1);
            }
        }

        /* Dark mode for premium warning */
        .dark-mode .premium-warning-container {
            background-color: #1e1e1e;
            color: #e0e0e0;
        }

        .dark-mode .premium-warning-title {
            color: #e0e0e0;
        }

        .dark-mode .premium-warning-text {
            color: #bbb;
        }

    </style>
}

<div class="container profile-container">
    @if (ViewBag.SuccessMessage != null)

    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @ViewBag.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-4 mb-4 mb-lg-0">
            <div class="card profile-card">
                <div class="profile-header">
                    <h4><i class="fas fa-user-circle me-2"></i>Profile</h4>
                    <button class="dark-mode-toggle" id="darkModeToggle">
                        <i class="fas fa-moon"></i>
                    </button>
                </div>
                <div class="profile-body">
                    <form asp-action="UpdateProfile" method="post" enctype="multipart/form-data" id="profileForm">
                        <!-- Hidden field for user ID -->
                        <input type="hidden" asp-for="Id" />

                        <div class="avatar-container">
                            <img src="@(string.IsNullOrEmpty(Model.AvatarUrl) ? "/img/no-image.jpg" : Model.AvatarUrl)"
                                 class="profile-avatar" alt="@Model.DisplayName" id="avatarPreview" />

                            @if (ViewBag.EquippedFrame != null)

                            {
                                <img src="@ViewBag.EquippedFrame.FrameUrl" class="avatar-frame" id="currentFrame" alt="Avatar Frame" />
                            }

                            <label for="AvatarFile" class="avatar-upload">
                                <i class="fas fa-camera"></i>
                            </label>
                            <input type="file" id="AvatarFile" name="AvatarFile" accept="image/*" class="avatar-upload-input" />

                            <div class="frame-selector-btn" id="openFrameSelector">
                                <i class="fas fa-paint-brush"></i>
                            </div>
                        </div>

                        <div class="profile-form-group">
                            <label asp-for="DisplayName">Username</label>
                            @{
                                bool canEditDisplayName =

                                Model.RoleId == 3 || // Admin

                                Model.RoleId == 2 || // Moderator

                                (Model.PremiumExpiryDate.HasValue && Model.PremiumExpiryDate.Value > DateTime.Now); // Premium user
                            }
                            @if (canEditDisplayName)

                            {
                                <input asp-for="DisplayName" class="form-control profile-form-control" />
                            }

                            else

                            {
                                <input asp-for="DisplayName" class="form-control profile-form-control" readonly="readonly" />
                                <small class="text-muted">Chỉ tài khoản Admin, Moderator hoặc Premium mới được thay đổi tên hiển thị</small>
                            }
                            <span asp-validation-for="DisplayName" class="text-danger"></span>
                        </div>

                        <div class="profile-form-group">
                            <label asp-for="Email">Email Address</label>
                            <input asp-for="Email" class="form-control profile-form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="password-section">
                            <h5 class="password-section-title"><i class="fas fa-lock me-2"></i>Change Password</h5>

                            <div class="profile-form-group">
                                <label for="CurrentPassword">Current Password</label>
                                <input type="password" id="CurrentPassword" name="CurrentPassword"
                                       class="form-control profile-form-control" />
                            </div>

                            <div class="profile-form-group">
                                <label for="NewPassword">New Password</label>
                                <input type="password" id="NewPassword" name="NewPassword"
                                       class="form-control profile-form-control"
                                       placeholder="Leave blank to keep current password" />
                            </div>

                            <div class="profile-form-group">
                                <label for="ConfirmPassword">Confirm New Password</label>
                                <input type="password" id="ConfirmPassword" name="ConfirmPassword"
                                       class="form-control profile-form-control" />
                            </div>
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-primary update-btn">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card activity-card">
                <div class="activity-header">
                    <h4><i class="fas fa-chart-line me-2"></i>Activity History</h4>
                </div>
                <div class="activity-body">
                    <ul class="nav nav-tabs profile-nav-tabs" id="activityTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="downloads-tab" data-bs-toggle="tab"
                                    data-bs-target="#downloads" type="button" role="tab"
                                    aria-controls="downloads" aria-selected="true">
                                <i class="fas fa-download me-2"></i>Downloads
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="reviews-tab" data-bs-toggle="tab"
                                    data-bs-target="#reviews" type="button" role="tab"
                                    aria-controls="reviews" aria-selected="false">
                                <i class="fas fa-star me-2"></i>Reviews
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="search-tab" data-bs-toggle="tab"
                                    data-bs-target="#search" type="button" role="tab"
                                    aria-controls="search" aria-selected="false">
                                <i class="fas fa-search me-2"></i>Search History
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="payment-tab" data-bs-toggle="tab"
                                    data-bs-target="#payment" type="button" role="tab"
                                    aria-controls="payment" aria-selected="false">
                                <i class="fas fa-credit-card me-2"></i>Payment History
                            </button>
                        </li>
                    </ul>
                    <div class="tab-content" id="activityTabsContent">
                        <div class="tab-pane fade show active" id="downloads" role="tabpanel" aria-labelledby="downloads-tab">
                            @if (ViewBag.RecentDownloads != null && ViewBag.RecentDownloads.Count > 0)

                            {
                                <div class="list-group profile-list-group">
                                    @foreach (var download in ViewBag.RecentDownloads)

                                    {
                                        <a href="/Game/Details/@download.Game.Id" class="list-group-item profile-list-item">
                                            <div class="d-flex w-100 justify-content-between align-items-center">
                                                <h5 class="mb-1">@download.Game.Title</h5>
                                                <small>@download.DownloadDate.ToString("MMM dd, yyyy")</small>
                                            </div>
                                            <p class="mb-1">
                                                <span class="badge bg-primary me-2">Download</span>
                                                @download.Game.Title
                                            </p>
                                        </a>
                                    }
                                </div>
                            }

                            else

                            {
                                <div class="empty-state">
                                    <i class="fas fa-download"></i>
                                    <p>No download history found.</p>
                                </div>
                            }
                        </div>
                        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                            @if (ViewBag.UserReviews != null && ViewBag.UserReviews.Count > 0)

                            {
                                <div class="list-group profile-list-group">
                                    @foreach (var review in ViewBag.UserReviews)

                                    {
                                        <div class="list-group-item profile-list-item">
                                            <div class="d-flex w-100 justify-content-between align-items-center">
                                                <h5 class="mb-1"><a href="/Game/Details/@review.GameId">@review.Game.Title</a></h5>
                                                <small>@review.DatePosted.ToString("MMM dd, yyyy")</small>
                                            </div>
                                            <div class="star-rating">
                                                @for (int i = 1; i <= 5; i++)

                                                {

                                                    if (i <= review.Rating)

                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }

                                                    else

                                                    {
                                                        <i class="far fa-star"></i>
                                                    }

                                                }
                                            </div>
                                            <p class="mb-1">@review.Content</p>
                                        </div>
                                    }
                                </div>
                            }

                            else

                            {
                                <div class="empty-state">
                                    <i class="fas fa-star"></i>
                                    <p>You haven't written any reviews yet.</p>
                                </div>
                            }
                        </div>
                        <div class="tab-pane fade" id="search" role="tabpanel" aria-labelledby="search-tab">
                            @if (ViewBag.SearchHistory != null && ViewBag.SearchHistory.Count > 0)

                            {
                                <div class="list-group profile-list-group">
                                    @foreach (var search in ViewBag.SearchHistory)

                                    {
                                        <a href="/Game/Index?q=@search.SearchQuery" class="list-group-item profile-list-item">
                                            <div class="d-flex w-100 justify-content-between align-items-center">
                                                <h5 class="mb-1"><i class="fas fa-search me-2"></i>@search.SearchQuery</h5>
                                                <small>@search.SearchDate.ToString("MMM dd, yyyy HH:mm")</small>
                                            </div>
                                        </a>
                                    }
                                </div>
                            }

                            else

                            {
                                <div class="empty-state">
                                    <i class="fas fa-search"></i>
                                    <p>No search history found.</p>
                                </div>
                            }
                        </div>
                        <div class="tab-pane fade" id="payment" role="tabpanel" aria-labelledby="payment-tab">
                            <div class="text-center mb-3">
                                <a href="@Url.Action("PaymentHistory", "Home")" class="btn btn-primary">
                                    <i class="fas fa-credit-card me-2"></i>View Full Payment History
                                </a>
                            </div>
                            <div class="text-muted text-center">
                                <i class="fas fa-info-circle me-2"></i>
                                <small>Click the button above to view your complete payment history and request status.</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Premium warning modal -->
<div class="premium-warning-modal" id="premiumWarningModal">
    <div class="premium-warning-container">
        <div class="premium-warning-icon">
            <i class="fas fa-crown"></i>
        </div>
        <h4 class="premium-warning-title">Khung Avatar Premium</h4>
        <p class="premium-warning-text">
            Khung avatar "<span id="premiumFrameName"></span>" yêu cầu tài khoản Premium để sử dụng.
            <br><br>
            Nâng cấp lên Premium để mở khóa tất cả khung avatar đặc biệt và nhiều tính năng độc quyền khác!
        </p>
        <div class="premium-warning-buttons">
            <a href="/Home/Premium" class="premium-upgrade-btn">
                <i class="fas fa-crown me-2"></i>Nâng cấp Premium
            </a>
            <button type="button" class="premium-cancel-btn" id="closePremiumWarning">
                <i class="fas fa-times me-2"></i>Đóng
            </button>
        </div>
    </div>
</div>

<!-- Frame selector modal - Outside of profile container -->
<div class="frame-gallery-modal" id="frameGalleryModal">
    <div class="frame-gallery-container">
        <div class="frame-gallery-header">
            <h4 class="frame-gallery-title"><i class="fas fa-paint-brush me-2"></i>Chọn khung avatar</h4>
            <button class="frame-gallery-close" id="closeFrameGallery">
                <i class="fas fa-times"></i>
            </button>
        </div>

        <div class="frame-items-wrapper">
            <div class="frame-items-container" id="frameItemsContainer">
                @if (ViewBag.AllAvatarFrames != null && ViewBag.AllAvatarFrames.Count > 0)
                {
                    bool userHasPremium = Model.PremiumExpiryDate.HasValue && Model.PremiumExpiryDate.Value > DateTime.Now;
                    
                    foreach (var frame in ViewBag.AllAvatarFrames)
                    {
                        bool isEquipped = ViewBag.EquippedFrame != null && ViewBag.EquippedFrame.Id == frame.Id;
                        bool isOwned = Model.UserAvatarFrames != null && Model.UserAvatarFrames.Any(f => f.FrameId == frame.Id);
                        bool isPremiumFrame = frame.IsPremium;
                        bool canUseFrame = !isPremiumFrame || userHasPremium;
                        
                        string rarityClass = "";
                        string rarityText = "";
                        string frameClasses = isEquipped ? "active" : "";

                        switch (frame.RarityLevel)
                        {
                            case 1: rarityClass = "common"; rarityText = "Thường"; break;
                            case 2: rarityClass = "uncommon"; rarityText = "Hiếm"; break;
                            case 3: rarityClass = "rare"; rarityText = "Quý"; break;
                            case 4: rarityClass = "epic"; rarityText = "Sử thi"; break;
                            case 5: rarityClass = "legendary"; rarityText = "Huyền thoại"; break;
                            default: rarityClass = "common"; rarityText = "Thường"; break;
                        }

                        // Add premium styling classes
                        if (isPremiumFrame)
                        {
                            if (canUseFrame)
                            {
                                frameClasses += " premium";
                            }
                            else
                            {
                                frameClasses += " premium-locked";
                            }
                        }

                        <div class="frame-item @frameClasses" 
                             data-frame-id="@frame.Id" 
                             data-is-premium="@isPremiumFrame.ToString().ToLower()"
                             data-can-use="@canUseFrame.ToString().ToLower()"
                             data-frame-name="@frame.FrameName">
                            <div class="frame-preview">
                                <img src="@(string.IsNullOrEmpty(Model.AvatarUrl) ? "/img/no-image.jpg" : Model.AvatarUrl)"
                                     class="frame-preview-avatar" alt="Preview avatar" />
                                <img src="@frame.FrameUrl" class="frame-preview-frame" alt="@frame.FrameName" />
                            </div>
                            <div class="frame-info">
                                <div class="frame-name">
                                    @frame.FrameName
                                    @if (isPremiumFrame)
                                    {
                                        <i class="fas fa-crown" style="color: #ffd700; margin-left: 5px;" title="Premium"></i>
                                    }
                                </div>
                                <div class="frame-rarity @rarityClass">@rarityText</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-info w-100">
                        <i class="fas fa-info-circle me-2"></i> Chưa có khung avatar nào được tìm thấy.
                    </div>
                }
            </div>
        </div>

        <div class="frame-actions">
            <button type="button" class="unequip-frame-btn" id="unequipFrameBtn">
                <i class="fas fa-trash-alt me-2"></i> Gỡ khung avatar
            </button>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Preview avatar image before upload
            $("#AvatarFile").change(function () {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#avatarPreview").attr('src', e.target.result);
                        // Also update preview avatars in the frame selector
                        $(".frame-preview-avatar").attr('src', e.target.result);
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });

            // Add animation for tab switching
            $('.profile-nav-tabs .nav-link').on('click', function () {
                $('.profile-nav-tabs .nav-link').removeClass('animate__animated animate__fadeIn');
                $(this).addClass('animate__animated animate__fadeIn');
            });

            // Auto-hide success message after 5 seconds
            setTimeout(function () {
                $(".alert-success").fadeOut('slow');
            }, 5000);

            // Open frame selector modal
            $('#openFrameSelector').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                $('body').addClass('modal-open');
                $('#frameGalleryModal').show();
            });

            // Close frame selector modal (ONLY via X button)
            $('#closeFrameGallery').on('click', function (e) {
                e.preventDefault();
                e.stopPropagation();
                $('#frameGalleryModal').hide();
                $('body').removeClass('modal-open');
            });

            // Unequip frame and close modal
            $('#unequipFrameBtn').on('click', function () {
                // Send AJAX request to unequip frame
                $.ajax({
                    url: '@Url.Action("UnequipAvatarFrame", "Account")',
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            // Remove current frame
                            $('#currentFrame').remove();
                            // Remove active class from all frame items
                            $('.frame-item').removeClass('active');
                            // Close modal
                            $('#frameGalleryModal').hide();
                            $('body').removeClass('modal-open');
                            // Show success message
                            if (response.message) {
                                location.reload(); // Reload to show updated state
                            }
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi gỡ khung avatar');
                    }
                });
            });

            // Frame selection with premium check
            $(document).on('click', '.frame-item', function () {
                const frameId = $(this).data('frame-id');
                const frameUrl = $(this).find('.frame-preview-frame').attr('src');
                const isPremium = $(this).data('is-premium');
                const canUse = $(this).data('can-use');
                const frameName = $(this).data('frame-name');

                // Check if user can use this frame
                if (isPremium && !canUse) {
                    // Show premium warning modal (keep frame gallery modal open in background)
                    $('#premiumFrameName').text(frameName);
                    $('#premiumWarningModal').show();
                    // Don't add modal-open class again since frame gallery is already open
                    return; // Don't proceed with equipping
                }

                // Send AJAX request to equip frame
                $.ajax({
                    url: '@Url.Action("EquipAvatarFrame", "Account")',
                    type: 'POST',
                    data: { frameId: frameId },
                    success: function (response) {
                        if (response.success) {
                            // Update active state
                            $('.frame-item').removeClass('active');
                            $(`[data-frame-id="${frameId}"]`).addClass('active');
                            
                            // Update current frame display
                            if ($('#currentFrame').length) {
                                $('#currentFrame').attr('src', frameUrl);
                            } else {
                                $('.avatar-container').append(`<img src="${frameUrl}" class="avatar-frame" id="currentFrame" alt="Avatar Frame" />`);
                            }
                            
                            // DO NOT close modal - let user continue selecting
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra khi trang bị khung avatar');
                    }
                });
            });

            // Close premium warning modal
            $('#closePremiumWarning').on('click', function () {
                $('#premiumWarningModal').hide();
                // Don't remove modal-open class since frame gallery modal is still open
            });

            // Close premium warning modal when clicking outside
            $('#premiumWarningModal').on('click', function (e) {
                if (e.target === this) {
                    $('#premiumWarningModal').hide();
                    // Don't remove modal-open class since frame gallery modal is still open
                }
            });

            // Dark mode toggle
            $('#darkModeToggle').on('click', function () {
                $('body').toggleClass('dark-mode');
                const isDarkMode = $('body').hasClass('dark-mode');
                $(this).html(isDarkMode ? '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon"></i>');
            });
        });
    </script>
}