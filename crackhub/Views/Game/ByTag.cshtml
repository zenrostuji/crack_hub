@model IEnumerable<crackhub.Models.Data.Game>
@{
    ViewData["Title"] = "Game theo Tag - CrackHub";
    var currentPage = ViewBag.CurrentPage;
    var totalPages = ViewBag.TotalPages;
    var tag = ViewBag.Tag;
    var selectedTags = ViewBag.SelectedTags as List<crackhub.Models.Data.Tag>;
    var allTags = ViewBag.AllTags as List<crackhub.Models.Data.Tag>;
    var totalGameCount = ViewBag.TotalGameCount;
    var currentSort = ViewBag.CurrentSort;
    var tagIds = ViewBag.TagIds as List<int>;
}

@section Styles {
    <link rel="stylesheet" href="~/css/category.css" asp-append-version="true" />
    <style>
        .tag-filter-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
        }
        
        .selected-tag {
            display: inline-block;
            background-color: #3461aa;
            color: white;
            padding: 5px 10px;
            margin: 5px;
            border-radius: 20px;
            font-size: 14px;
        }
        
        .selected-tag .remove-tag {
            margin-left: 5px;
            cursor: pointer;
        }
        
        .tag-list {
            max-height: 300px;
            overflow-y: auto;
        }
        
        .tag-item {
            display: block;
            padding: 8px 12px;
            margin-bottom: 5px;
            border-radius: 5px;
            cursor: pointer;
            background-color: #f1f1f1;
            color: #333;
            text-decoration: none;
            transition: background-color 0.3s, color 0.3s;
        }
        
        .tag-item:hover, .tag-item.active {
            background-color: #3461aa;
            color: white;
        }
        
        .tag-count {
            float: right;
            background-color: rgba(0,0,0,0.1);
            padding: 2px 6px;
            border-radius: 10px;
            font-size: 12px;
        }
        
        .clear-tags {
            margin-top: 10px;
        }
    </style>
}

<div class="container">
    <!-- Tag Header -->
    <div class="category-header text-center">
        <div class="container">
            <i class="fas fa-tags category-icon"></i>
            @if (tag != null)
            {
                <h1 class="category-title animate__animated animate__fadeIn">Tag: @tag.Name</h1>
            }
            else if (selectedTags != null && selectedTags.Any())
            {
                <h1 class="category-title animate__animated animate__fadeIn">
                    Lọc theo @selectedTags.Count tag
                </h1>
            }
            else
            {
                <h1 class="category-title animate__animated animate__fadeIn">Tất cả các tag</h1>
            }
            
            <p class="category-description">
                @if (tag != null)
                {
                    <span>Những game thuộc tag: @tag.Name</span>
                }
                else if (selectedTags != null && selectedTags.Any())
                {
                    <span>Game thuộc các tag: @string.Join(", ", selectedTags.Select(t => t.Name))</span>
                }
                else
                {
                    <span>Khám phá game theo các tag</span>
                }
            </p>
            
            <div class="category-stats">
                <div class="stat-item">
                    <span class="stat-number animate__animated animate__fadeIn animate__delay-1s">@totalGameCount</span>
                    <span class="stat-label">Games</span>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <!-- Sidebar with Tag Filters -->
        <div class="col-lg-3">
            <div class="tag-filter-section">
                <h4 class="mb-3"><i class="fas fa-filter me-2"></i>Lọc theo Tag</h4>
                
                <!-- Selected Tags -->
                @if (selectedTags != null && selectedTags.Any())
                {
                    <div class="selected-tags mb-3">
                        <h6>Tags đã chọn:</h6>
                        @foreach (var selectedTag in selectedTags)
                        {
                            <span class="selected-tag">
                                @selectedTag.Name
                                <span class="remove-tag" data-tag-id="@selectedTag.Id"><i class="fas fa-times"></i></span>
                            </span>
                        }
                        <div class="mt-2">
                            <a href="@Url.Action("Index", "Game")" class="btn btn-sm btn-outline-secondary clear-tags">
                                <i class="fas fa-trash-alt me-1"></i> Xóa tất cả
                            </a>
                        </div>
                    </div>
                }
                else if (tag != null)
                {
                    <div class="selected-tags mb-3">
                        <h6>Tag đã chọn:</h6>
                        <span class="selected-tag">
                            @tag.Name
                            <a href="@Url.Action("Index", "Game")" class="text-white">
                                <i class="fas fa-times ms-1"></i>
                            </a>
                        </span>
                    </div>
                }
                
                <!-- All Available Tags -->
                <h6 class="mt-3 mb-2">Tất cả các tag:</h6>
                <div class="tag-list">
                    @if (allTags != null && allTags.Any())
                    {
                        foreach (var t in allTags)
                        {
                            bool isSelected = (tag != null && tag.Id == t.Id) || (tagIds != null && tagIds.Contains(t.Id));
                            <a href="@GetTagUrl(t.Id, isSelected)" 
                               class="tag-item @(isSelected ? "active" : "")"
                               data-tag-id="@t.Id">
                                @t.Name
                                <span class="tag-count">@GetGameCountForTag(t.Id)</span>
                            </a>
                        }
                    }
                    else
                    {
                        <p>Không có tag nào.</p>
                    }
                </div>
            </div>
        </div>
        
        <!-- Games Grid -->
        <div class="col-lg-9">
            <!-- Sorting Options -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h4>@totalGameCount game phù hợp</h4>
                </div>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-sort me-1"></i> Sắp xếp
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="sortDropdown">
                        <li>
                            <a class="dropdown-item @(currentSort == "newest" ? "active" : "")" 
                               href="@GetSortUrl("newest")">
                                <i class="fas fa-calendar-alt me-2"></i> Mới nhất
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item @(currentSort == "popular" ? "active" : "")" 
                               href="@GetSortUrl("popular")">
                                <i class="fas fa-fire me-2"></i> Phổ biến nhất
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item @(currentSort == "rating" ? "active" : "")" 
                               href="@GetSortUrl("rating")">
                                <i class="fas fa-star me-2"></i> Đánh giá cao
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            
            <!-- Games List -->
            <div class="row">
                @if (Model != null && Model.Any())
                {
                    @foreach (var game in Model)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6 mb-4">
                            <div class="game-card" data-aos="fade-up">
                                <a href="@Url.Action("Details", "Game", new { id = game.Id })">
                                    <div class="card-img-container">
                                        <img src="@(string.IsNullOrEmpty(game.CoverImageUrl) ? "/img/no-image.jpg" : game.CoverImageUrl)" 
                                             class="card-img-top" alt="@game.Title" onerror="this.src='/img/no-image.jpg'">
                                        <span class="game-category">@game.Category?.CategoryName</span>
                                    </div>
                                </a>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <a href="@Url.Action("Details", "Game", new { id = game.Id })" class="text-decoration-none text-dark">@game.Title</a>
                                    </h5>
                                    <p class="card-text">@(game.ShortDescription?.Length > 100 ? game.ShortDescription.Substring(0, 100) + "..." : game.ShortDescription)</p>
                                </div>
                                <div class="game-card-footer">
                                    <div class="game-rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= Math.Round(game.AverageRating / 2) ? "fas" : "far") fa-star"></i>
                                        }
                                    </div>
                                    <div class="game-downloads">
                                        <i class="fas fa-download me-1"></i> @game.Downloads
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="alert alert-info">
                            Không tìm thấy game nào phù hợp với tag đã chọn. Vui lòng chọn tag khác.
                        </div>
                    </div>
                }
            </div>
            
            <!-- Pagination -->
            @if (totalPages > 1)
            {
                <nav aria-label="Tag pagination" class="category-pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@GetPaginationUrl(currentPage - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@GetPaginationUrl(i)">@i</a>
                            </li>
                        }
                        
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" href="@GetPaginationUrl(currentPage + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Xử lý sự kiện khi nhấp vào nút xóa tag
            $('.remove-tag').on('click', function() {
                const tagId = $(this).data('tag-id');
                const selectedTagIds = @Html.Raw(Json.Serialize(tagIds));
                
                // Tạo mảng tag mới với tag đã chọn bị loại bỏ
                const newTagIds = selectedTagIds.filter(id => id !== tagId);
                
                if (newTagIds.length > 0) {
                    // Nếu còn tag khác, chuyển đến trang Tags với các tag còn lại
                    window.location.href = '@Url.Action("Tags", "Game")' + '?tags=' + newTagIds.join('&tags=');
                } else {
                    // Nếu không còn tag nào, chuyển về trang chính
                    window.location.href = '@Url.Action("Index", "Game")';
                }
            });
            
            // Xử lý sự kiện khi nhấp vào tag trong danh sách
            $('.tag-item').on('click', function(e) {
                e.preventDefault();
                const tagId = $(this).data('tag-id');
                const isSelected = $(this).hasClass('active');
                const selectedTagIds = @Html.Raw(Json.Serialize(tagIds)) || [];
                
                if (isSelected) {
                    // Nếu tag đã được chọn, loại bỏ khỏi danh sách
                    const newTagIds = selectedTagIds.filter(id => id !== tagId);
                    
                    if (newTagIds.length > 0) {
                        // Nếu còn tag khác, chuyển đến trang Tags với các tag còn lại
                        window.location.href = '@Url.Action("Tags", "Game")' + '?tags=' + newTagIds.join('&tags=');
                    } else {
                        // Nếu không còn tag nào, chuyển về trang chính
                        window.location.href = '@Url.Action("Index", "Game")';
                    }
                } else {
                    // Nếu tag chưa được chọn, thêm vào danh sách
                    const newTagIds = [...selectedTagIds, tagId];
                    window.location.href = '@Url.Action("Tags", "Game")' + '?tags=' + newTagIds.join('&tags=');
                }
            });
        });
    </script>
}

@functions {
    public string GetTagUrl(int tagId, bool isSelected)
    {
        var selectedTagIds = ViewBag.TagIds as List<int> ?? new List<int>();
        
        if (isSelected)
        {
            // Nếu tag đã được chọn, loại bỏ khỏi danh sách
            var newTagIds = selectedTagIds.Where(id => id != tagId).ToList();
            
            if (newTagIds.Any())
            {
                // Nếu còn tag khác, tạo URL với các tag còn lại
                return Url.Action("Tags", "Game", new { tags = newTagIds });
            }
            else
            {
                // Nếu không còn tag nào, quay về trang chính
                return Url.Action("Index", "Game");
            }
        }
        else
        {
            // Nếu tag chưa được chọn, thêm vào danh sách
            var newTagIds = new List<int>(selectedTagIds) { tagId };
            return Url.Action("Tags", "Game", new { tags = newTagIds });
        }
    }
    
    public string GetSortUrl(string sort)
    {
        var tag = ViewBag.Tag;
        var tagIds = ViewBag.TagIds as List<int>;
        
        if (tag != null)
        {
            // Nếu đang xem một tag cụ thể
            return Url.Action("Tag", "Game", new { id = tag.Id, page = ViewBag.CurrentPage, sort = sort });
        }
        else if (tagIds != null && tagIds.Any())
        {
            // Nếu đang xem nhiều tag
            var routeValues = new Dictionary<string, object> {
                { "page", ViewBag.CurrentPage },
                { "sort", sort }
            };
            
            // Thêm tất cả các tagId vào route values
            for (int i = 0; i < tagIds.Count; i++)
            {
                routeValues.Add($"tags[{i}]", tagIds[i]);
            }
            
            return Url.Action("Tags", "Game", routeValues);
        }
        
        // Mặc định quay về trang chính với sắp xếp
        return Url.Action("Index", "Game", new { sort = sort });
    }
    
    public string GetPaginationUrl(int page)
    {
        var tag = ViewBag.Tag;
        var tagIds = ViewBag.TagIds as List<int>;
        var currentSort = ViewBag.CurrentSort;
        
        if (tag != null)
        {
            // Nếu đang xem một tag cụ thể
            return Url.Action("Tag", "Game", new { id = tag.Id, page = page, sort = currentSort });
        }
        else if (tagIds != null && tagIds.Any())
        {
            // Nếu đang xem nhiều tag
            var routeValues = new Dictionary<string, object> {
                { "page", page },
                { "sort", currentSort }
            };
            
            // Thêm tất cả các tagId vào route values
            for (int i = 0; i < tagIds.Count; i++)
            {
                routeValues.Add($"tags[{i}]", tagIds[i]);
            }
            
            return Url.Action("Tags", "Game", routeValues);
        }
        
        // Mặc định quay về trang chính
        return Url.Action("Index", "Game", new { page = page });
    }
    
    public int GetGameCountForTag(int tagId)
    {
        // Count games for the tag - placeholder function
        // In a real implementation, this would be populated from the controller
        return 0; // Default value if not found
    }
}