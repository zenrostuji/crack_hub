@model crackhub.Models.Data.Game
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = $"{Model.Title} - CrackHub";
    bool isLoggedIn = HttpContextAccessor.HttpContext.Session.GetString("UserId") != null;
    bool isFavorite = ViewBag.IsFavorite == true;
}

<div class="container game-details-container">
    <!-- Game Header -->
    <div class="row gx-lg-5">
        <div class="col-md-4">
            <div class="game-cover-wrapper">
                <img src="@Model.CoverImageUrl" class="game-cover-img" alt="@Model.Title" onerror="this.src='/img/no-image.jpg'" />
                <div class="game-cover-overlay">
                    <a href="@Url.Action("Download", "Game", new { id = Model.Id })" class="cover-download-btn">
                        <i class="fas fa-download me-2"></i> Tải game
                    </a>
                </div>
            </div>
            
            <div class="d-grid gap-3 mb-4">
                <a href="@Url.Action("Download", "Game", new { id = Model.Id })" class="btn btn-lg download-btn">
                    <i class="fas fa-download me-2"></i> Tải game
                </a>
                
                @if (isLoggedIn) 
                {
                    <button class="btn btn-lg favorite-btn @(isFavorite ? "active" : "")" data-game-id="@Model.Id" data-type="text">
                        <i class="@(isFavorite ? "fas" : "far") fa-heart me-2"></i> @(isFavorite ? "Bỏ yêu thích" : "Yêu thích")
                    </button>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="btn btn-lg favorite-btn">
                        <i class="far fa-heart me-2"></i> Yêu thích
                    </a>
                }
            </div>
            
            <div class="info-card">
                <div class="info-card-header">
                    <i class="fas fa-info-circle me-2"></i> Thông tin
                </div>
                <div class="card-body p-0">
                    <table class="table info-table">
                        <tbody>
                            <tr>
                                <td>Nhà phát triển</td>
                                <td>@Model.Developer</td>
                            </tr>
                            <tr>
                                <td>Nhà phát hành</td>
                                <td>@Model.Publisher</td>
                            </tr>
                            <tr>
                                <td>Ngày phát hành</td>
                                <td>@(Model.ReleaseDate?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                            </tr>
                            <tr>
                                <td>Thể loại</td>
                                <td>
                                    <a href="@Url.Action("ByCategory", "Game", new { categorySlug = Model.Category?.Slug })" class="category-link">
                                        @Model.Category?.CategoryName
                                    </a>
                                </td>
                            </tr>
                            <tr>
                                <td>Dung lượng</td>
                                <td>@Model.Size</td>
                            </tr>
                            <tr>
                                <td>Lượt tải</td>
                                <td>@Model.Downloads.ToString()</td>
                            </tr>
                            <tr>
                                <td>Đánh giá</td>
                                <td>
                                    <div class="rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="@(i <= Math.Round(Model.AverageRating / 2) ? "fas" : "far") fa-star"></i>
                                        }
                                    </div>
                                    <span class="ms-2 fw-bold">@Model.AverageRating.ToString("0.0")/10</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        
        <div class="col-md-8">
            <h1 class="game-title">@Model.Title</h1>
            
            <div class="game-tags">
                @if (Model.GameTags != null && Model.GameTags.Any())
                {
                    foreach (var gameTag in Model.GameTags)
                    {
                        <a href="@Url.Action("Tag", "Game", new { id = gameTag.TagId })" class="game-tag">@gameTag.Tag?.Name</a>
                    }
                }
            </div>
            
            <div class="short-description">
                <p class="lead mb-0">@Model.ShortDescription</p>
            </div>
            
            <div class="full-description">
                <h3 class="section-header"><i class="fas fa-info-circle me-2"></i>Giới thiệu</h3>
                <div class="card content-card">
                    <div class="card-body">
                        @Html.Raw(Model.FullDescription?.Replace("\n", "<br />"))
                    </div>
                </div>
            </div>
            
            <!-- Screenshots Gallery -->
            <div class="screenshots">
                <h3 class="section-header"><i class="fas fa-images me-2"></i>Hình ảnh</h3>
                
                @if (Model.Screenshots != null && Model.Screenshots.Any())
                {
                    <div class="highlight_overflow">
                        <div id="highlight_player_area">
                            <!-- Carousel items -->
                            @foreach (var screenshot in Model.Screenshots.Select((value, index) => new { Value = value, Index = index }))
                            {
                                <div class="highlight_player_item @(screenshot.Index == 0 ? "active" : "")" id="highlight_@screenshot.Index">
                                    <img src="@screenshot.Value.ImageUrl" alt="Screenshot @(screenshot.Index + 1)" 
                                         onerror="this.src='/img/no-image.jpg'" loading="lazy">
                                </div>
                            }
                        </div>
                        
                        <div id="highlight_strip">
                            <!-- Thumbnails -->
                            @foreach (var screenshot in Model.Screenshots.Select((value, index) => new { Value = value, Index = index }))
                            {
                                <div class="highlight_strip_item @(screenshot.Index == 0 ? "active" : "")" id="highlight_thumb_@screenshot.Index" 
                                     data-target="@screenshot.Index">
                                    <img src="@screenshot.Value.ImageUrl" alt="Thumbnail @(screenshot.Index + 1)" 
                                         onerror="this.src='/img/no-image.jpg'" loading="lazy">
                                </div>
                            }
                        </div>
                        
                        <div class="slider_ctn">
                            <div class="slider_left"><i class="fas fa-chevron-left"></i></div>
                            <div class="slider_right"><i class="fas fa-chevron-right"></i></div>
                        </div>
                    </div>
                    
                    <script type="text/javascript">
                        $(document).ready(function() {
                            // Initialize the gallery
                            var currentIndex = 0;
                            var totalItems = @Model.Screenshots.Count();
                            
                            // Show active item
                            function showItem(index) {
                                // Hide all items
                                $('.highlight_player_item').removeClass('active');
                                // Show the current item
                                $('#highlight_' + index).addClass('active');
                                
                                // Update thumbnail active state
                                $('.highlight_strip_item').removeClass('active');
                                $('#highlight_thumb_' + index).addClass('active');
                                
                                // Scroll the thumbnail strip to make the active thumbnail visible
                                const $thumbnail = $('#highlight_thumb_' + index);
                                const $strip = $('#highlight_strip');
                                const stripLeft = $strip.scrollLeft();
                                const stripWidth = $strip.width();
                                const thumbLeft = $thumbnail.position().left;
                                const thumbWidth = $thumbnail.width();
                                
                                if (thumbLeft < 0 || thumbLeft > stripWidth - thumbWidth) {
                                    $strip.animate({
                                        scrollLeft: stripLeft + thumbLeft - (stripWidth / 2) + (thumbWidth / 2)
                                    }, 200);
                                }
                                
                                // Update current index
                                currentIndex = index;
                            }
                            
                            // Navigation handlers for the arrows
                            $('.slider_left').on('click', function(e) {
                                e.preventDefault();
                                e.stopPropagation();
                                var newIndex = (currentIndex - 1 + totalItems) % totalItems;
                                showItem(newIndex);
                            });
                            
                            $('.slider_right').on('click', function(e) {
                                e.preventDefault();
                                e.stopPropagation();
                                var newIndex = (currentIndex + 1) % totalItems;
                                showItem(newIndex);
                            });
                            
                            // Thumbnail click handlers
                            $('.highlight_strip_item').on('click', function(e) {
                                e.preventDefault();
                                var index = parseInt($(this).data('target'));
                                showItem(index);
                            });
                            
                            // Initialize with first item active
                            showItem(0);
                            
                            // Add keyboard navigation
                            $(document).keydown(function(e) {
                                // Only handle keyboard events when the screenshot gallery is visible in viewport
                                const galleryTop = $('.highlight_overflow').offset().top;
                                const galleryBottom = galleryTop + $('.highlight_overflow').height();
                                const viewportTop = $(window).scrollTop();
                                const viewportBottom = viewportTop + $(window).height();
                                
                                if (galleryBottom > viewportTop && galleryTop < viewportBottom) {
                                    if (e.keyCode === 37) { // Left arrow
                                        $('.slider_left').click();
                                    } else if (e.keyCode === 39) { // Right arrow
                                        $('.slider_right').click();
                                    }
                                }
                            });
                        });
                    </script>
                }
                else
                {
                    <div class="alert alert-light">
                        <p class="mb-0"><i class="fas fa-info-circle me-2"></i>Chưa có hình ảnh nào cho game này.</p>
                    </div>
                }
            </div>
            
            <!-- Features -->
            @if (Model.Features != null && Model.Features.Any())
            {
                <div class="features">
                    <h3 class="section-header"><i class="fas fa-star me-2"></i>Tính năng</h3>
                    <div class="feature-list">
                        @foreach (var feature in Model.Features)
                        {
                            <div class="feature-item">
                                <div class="feature-icon">
                                    @{
                                        // Randomly choose an icon for each feature
                                        var icons = new[] { "fa-check", "fa-star", "fa-bolt", "fa-magic", "fa-rocket", 
                                                           "fa-gamepad", "fa-trophy", "fa-gift", "fa-shield-alt", "fa-crown" };
                                        var random = new Random();
                                        var iconClass = icons[random.Next(icons.Length)];
                                    }
                                    <i class="fas @iconClass"></i>
                                </div>
                                <span>@feature.FeatureDescription</span>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="features">
                    <h3 class="section-header"><i class="fas fa-star me-2"></i>Tính năng</h3>
                    <div class="no-features">
                        <i class="fas fa-info-circle"></i>
                        <p>Chưa có thông tin về tính năng cho game này.</p>
                    </div>
                </div>
            }
            
            <!-- System Requirements -->
            @if (Model.SystemRequirements != null && Model.SystemRequirements.Any())
            {
                <div class="system-requirements">
                    <h3 class="section-header"><i class="fas fa-microchip me-2"></i>Cấu hình yêu cầu</h3>
                    
                    <div class="row">
                        @{
                            var minReqs = Model.SystemRequirements.FirstOrDefault(sr => sr.RequirementType == "Minimum");
                            var recReqs = Model.SystemRequirements.FirstOrDefault(sr => sr.RequirementType == "Recommended");
                        }
                        
                        @if (minReqs != null)
                        {
                            <div class="col-md-6">
                                <div class="requirements-card">
                                    <div class="requirements-header bg-secondary text-white">
                                        <i class="fas fa-microchip me-2"></i> Cấu hình tối thiểu
                                    </div>
                                    <div class="requirements-body">
                                        <ul class="requirements-list list-unstyled">
                                            <li><strong>Hệ điều hành:</strong> @minReqs.OS</li>
                                            <li><strong>CPU:</strong> @minReqs.Processor</li>
                                            <li><strong>RAM:</strong> @minReqs.Memory</li>
                                            <li><strong>GPU:</strong> @minReqs.Graphics</li>
                                            <li><strong>DirectX:</strong> @minReqs.DirectX</li>
                                            <li><strong>Dung lượng:</strong> @minReqs.Storage</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        @if (recReqs != null)
                        {
                            <div class="col-md-6">
                                <div class="requirements-card">
                                    <div class="requirements-header bg-primary text-white">
                                        <i class="fas fa-microchip me-2"></i> Cấu hình đề xuất
                                    </div>
                                    <div class="requirements-body">
                                        <ul class="requirements-list list-unstyled">
                                            <li><strong>Hệ điều hành:</strong> @recReqs.OS</li>
                                            <li><strong>CPU:</strong> @recReqs.Processor</li>
                                            <li><strong>RAM:</strong> @recReqs.Memory</li>
                                            <li><strong>GPU:</strong> @recReqs.Graphics</li>
                                            <li><strong>DirectX:</strong> @recReqs.DirectX</li>
                                            <li><strong>Dung lượng:</strong> @recReqs.Storage</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <button type="button" class="btn submit-review-btn" id="submitReview" style="margin-left: 300px;">
                        <i class="fas me-2"></i> Kiểm tra cấu hình tự động
                    </button>
                </div>
            }
            
            <!-- Crack Info -->
            @if (Model.CrackInfos != null && Model.CrackInfos.Any())
            {
                <div class="crack-info">
                    <h3 class="section-header"><i class="fas fa-unlock-alt me-2"></i>Thông tin crack</h3>
                    
                    <div class="accordion" id="crackAccordion">
                        @foreach (var crackInfo in Model.CrackInfos)
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="crack-heading-@crackInfo.Id">
                                    <button class="accordion-button @(crackInfo.IsRecommended ? "" : "collapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#crack-collapse-@crackInfo.Id" aria-expanded="@(crackInfo.IsRecommended ? "true" : "false")" aria-controls="crack-collapse-@crackInfo.Id">
                                        <div>
                                            <strong>@crackInfo.Group</strong> - Phiên bản @crackInfo.Version
                                            @if(crackInfo.IsRecommended)
                                            {
                                                <span class="badge bg-success ms-2">Khuyên dùng</span>
                                            }
                                        </div>
                                    </button>
                                </h2>
                                <div id="crack-collapse-@crackInfo.Id" class="accordion-collapse collapse @(crackInfo.IsRecommended ? "show" : "")" aria-labelledby="crack-heading-@crackInfo.Id" data-bs-parent="#crackAccordion">
                                    <div class="accordion-body">
                                        <p>@crackInfo.Description</p>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <p><strong><i class="far fa-calendar-alt me-2"></i>Ngày phát hành:</strong> @crackInfo.ReleaseDate?.ToString("dd/MM/yyyy")</p>
                                            </div>
                                            <div class="col-md-6">
                                                <p><strong><i class="fas fa-file-archive me-2"></i>Dung lượng:</strong> @crackInfo.FileSize</p>
                                            </div>
                                        </div>
                                        <div class="text-center mt-3">
                                            <a href="@Url.Action("Download", "Game", new { id = Model.Id, crackId = crackInfo.Id })" class="btn btn-primary px-4">
                                                <i class="fas fa-download me-2"></i> Tải xuống
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            
            <!-- Related Games -->
            @if (ViewBag.RelatedGames != null && ((IEnumerable<crackhub.Models.Data.Game>)ViewBag.RelatedGames).Any())
            {
                <div class="related-games">
                    <h3 class="section-header"><i class="fas fa-gamepad me-2"></i>Game tương tự</h3>
                    <div class="row">
                        @foreach (var relGame in (IEnumerable<crackhub.Models.Data.Game>)ViewBag.RelatedGames)
                        {
                            <div class="col-md-3 col-6 mb-3">
                                <div class="related-game-card h-100">
                                    <img src="@relGame.CoverImageUrl" class="card-img-top" alt="@relGame.Title" onerror="this.src='/img/no-image.jpg'" />
                                    <div class="card-body p-2">
                                        <h6 class="related-game-title">
                                            <a href="@Url.Action("Details", "Game", new { id = relGame.Id })" class="related-game-link">
                                                @relGame.Title
                                            </a>
                                        </h6>
                                        <div class="small">
                                            <div class="rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="@(i <= Math.Round(relGame.AverageRating / 2) ? "fas" : "far") fa-star fa-xs"></i>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            
            <!-- Reviews Section -->
            <div class="reviews">
                <h3 class="section-header"><i class="fas fa-comment-alt me-2"></i>Đánh giá từ người dùng</h3>
                
                @if (isLoggedIn)
                {
                    <div class="review-form-card mb-4">
                        <div class="review-form-header">
                            <i class="fas fa-pencil-alt me-2"></i>
                            Đánh giá của bạn
                        </div>
                        <div class="review-form-body">
                            <form id="reviewForm" method="post">
                                <input type="hidden" id="gameId" name="gameId" value="@Model.Id" />
                                
                                <div class="mb-4">
                                    <label for="rating" class="form-label fw-bold mb-3">Điểm đánh giá</label>
                                    <div class="rating-selector">
                                        <div class="stars-container">
                                            <div class="star-rating-selection">
                                                @for (int i = 5; i >= 1; i--)
                                                {
                                                    <input type="radio" id="rating-@i" name="rating" value="@(i*2)" @(i == 5 ? "checked" : "")>
                                                    <label for="rating-@i"><i class="fas fa-star"></i></label>
                                                }
                                            </div>
                                            <span id="rating-text" class="ms-3">Xuất sắc (10/10)</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="reviewTitle" class="form-label fw-bold">Tiêu đề</label>
                                    <input type="text" class="form-control" id="reviewTitle" name="title" maxlength="100" placeholder="Nhập tiêu đề đánh giá..." required />
                                    <div class="invalid-feedback">Vui lòng nhập tiêu đề (tối đa 100 ký tự).</div>
                                </div>
                                
                                <div class="mb-4">
                                    <label for="reviewContent" class="form-label fw-bold">Nội dung</label>
                                    <textarea class="form-control" id="reviewContent" name="content" rows="4" placeholder="Chia sẻ ý kiến của bạn..." required></textarea>
                                    <div class="invalid-feedback">Vui lòng nhập nội dung đánh giá.</div>
                                </div>
                                
                                <div class="text-end">
                                    <button type="button" class="btn submit-review-btn" id="submitReview">
                                        <i class="fas fa-paper-plane me-2"></i> Gửi đánh giá
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert login-alert mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        Bạn cần <a href="@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })" class="alert-link">đăng nhập</a> để đánh giá game này.
                    </div>
                }
                
                <div id="reviewsList">
                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        <div class="review-filter-bar d-flex justify-content-between align-items-center mb-4">
                            <div class="review-count">
                                <span class="fw-bold text-dark">
                                    <i class="fas fa-list me-2"></i> @Model.Reviews.Count() đánh giá
                                </span>
                            </div>
                            <div class="review-sort d-flex align-items-center">
                                <label class="me-2 text-muted small">Sắp xếp:</label>
                                <select class="form-select form-select-sm review-sort-select" style="width: auto">
                                    <option value="newest">Mới nhất</option>
                                    <option value="oldest">Cũ nhất</option>
                                    <option value="highest">Điểm cao nhất</option>
                                    <option value="lowest">Điểm thấp nhất</option>
                                    <option value="helpful">Hữu ích nhất</option>
                                </select>
                            </div>
                        </div>

                        foreach (var review in Model.Reviews.OrderByDescending(r => r.DatePosted))
                        {
                            <div class="review-card" style="--rating-percent: @(review.Rating * 10)%">
                                <div class="review-header">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            <img src="@(review.User?.AvatarUrl ?? "/img/default-avatar.png")" 
                                                alt="@review.User?.DisplayName" 
                                                class="review-avatar me-3">
                                            <div>
                                                <h5 class="reviewer-name">@review.User?.DisplayName</h5>
                                                <div class="review-rating-display">
                                                    <div class="rating">
                                                        @for (int i = 1; i <= 5; i++)
                                                        {
                                                            <i class="@(i <= Math.Round(review.Rating / 2) ? "fas" : "far") fa-star"></i>
                                                        }
                                                    </div>
                                                    <span class="rating-value-badge">@review.Rating.ToString("0.0")/10</span>
                                                </div>
                                                <div class="review-date text-muted small">
                                                    <i class="far fa-calendar-alt me-1"></i>
                                                    @review.DatePosted.ToString("dd/MM/yyyy HH:mm")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="review-body">
                                    <h5 class="review-title">@review.Title</h5>
                                    <p class="review-content mb-0">@review.Content</p>
                                </div>
                                <div class="review-footer d-flex justify-content-between align-items-center">
                                    <div class="review-metadata">
                                        <span class="me-3">
                                            <i class="fas fa-gamepad"></i> @Model.Title
                                        </span>
                                        <span>
                                            <i class="fas fa-user"></i> @review.User?.DisplayName
                                        </span>
                                    </div>
                                    <button class="btn btn-sm helpful-btn @(ViewBag.UserHelpfulReviews != null && ViewBag.UserHelpfulReviews.Contains(review.Id) ? "active" : "")" 
                                            data-review-id="@review.Id" 
                                            data-bs-toggle="tooltip" 
                                            title="Đánh dấu đánh giá này là hữu ích">
                                        <i class="fas fa-thumbs-up me-1"></i>
                                        Hữu ích <span class="helpful-count">(@review.HelpfulCount)</span>
                                    </button>
                                </div>
                            </div>
                        }
                        
                        @if(Model.Reviews.Count() > 5)
                        {
                            <nav>
                                <ul class="pagination reviews-pagination">
                                    <li class="page-item disabled">
                                        <a class="page-link" href="#" tabindex="-1">
                                            <i class="fas fa-chevron-left"></i>
                                        </a>
                                    </li>
                                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                                    <li class="page-item">
                                        <a class="page-link" href="#">
                                            <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="far fa-comment-dots fa-4x mb-3"></i>
                            <h4 class="mb-2">Chưa có đánh giá nào</h4>
                            <p class="mb-0">Hãy là người đầu tiên đánh giá game này!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/screenshots-gallery.js"></script>
    <script>
        $(document).ready(function() {
            // Prevent duplicate authentication alerts by checking if we're logged in
            var isLoggedIn = @Json.Serialize(isLoggedIn);
            
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // Enhanced review rating selector interaction
            $('.star-rating-selection input').on('change', function() {
                const rating = parseInt($(this).val());
                let ratingText = '';
                
                switch(rating) {
                    case 2:
                        ratingText = 'Kém (2/10)';
                        break;
                    case 4:
                        ratingText = 'Trung bình (4/10)';
                        break;
                    case 6:
                        ratingText = 'Khá (6/10)';
                        break;
                    case 8:
                        ratingText = 'Tốt (8/10)';
                        break;
                    case 10:
                        ratingText = 'Xuất sắc (10/10)';
                        break;
                    default:
                        ratingText = 'Xuất sắc (10/10)';
                }
                
                $('#rating-text').text(ratingText);
            });
            
            // Handle review submission via AJAX
            $('#submitReview').on('click', function() {
                const $form = $('#reviewForm');
                const $submitBtn = $(this);
                const originalBtnText = $submitBtn.html();
                
                // Validate form
                if (!$form[0].checkValidity()) {
                    $form.addClass('was-validated');
                    return;
                }
                
                // Disable button and show loading state
                $submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i> Đang gửi...').prop('disabled', true);
                
                // Collect form data
                const gameId = $('#gameId').val();
                const rating = $('input[name="rating"]:checked').val();
                const title = $('#reviewTitle').val();
                const content = $('#reviewContent').val();
                
                // Send AJAX request
                $.ajax({
                    url: '@Url.Action("AddReview", "Game")',
                    type: 'POST',
                    data: {
                        gameId: gameId,
                        title: title,
                        content: content,
                        rating: rating
                    },
                    success: function(response) {
                        if (response.success) {
                            // Show success message
                            alert('Đánh giá của bạn đã được gửi thành công!');
                            $form.removeClass('was-validated').trigger('reset');
                            
                            // Reload the page to see the new review
                            location.reload();
                        } else {
                            // Reset button state
                            $submitBtn.html(originalBtnText).prop('disabled', false);
                            
                            // Show error message
                            alert(response.message || 'Có lỗi xảy ra khi gửi đánh giá');
                        }
                    },
                    error: function() {
                        // Reset button state
                        $submitBtn.html(originalBtnText).prop('disabled', false);
                        
                        // Show error message
                        alert('Có lỗi xảy ra khi gửi đánh giá. Vui lòng thử lại sau.');
                    }
                });
            });
            
            // Handle review submission with validation
            $('#reviewForm').on('submit', function(e) {
                const $form = $(this);
                
                // Validate form
                if (!$form[0].checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    $form.addClass('was-validated');
                    return false;
                }
                
                // If valid, show loading state on button
                const $submitBtn = $('#submitReview');
                const originalBtnText = $submitBtn.html();
                $submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i> Đang gửi...').prop('disabled', true);
                
                // Form will submit normally - no need to manually handle Ajax here
                return true;
            });
            
            // Handle helpful button clicks
            $(document).on('click', '.helpful-btn', function() {
                if (!isLoggedIn) {
                    window.location.href = "@Url.Action("Login", "Account", new { returnUrl = Context.Request.Path })";
                    return;
                }
                
                const $button = $(this);
                const reviewId = $button.data('review-id');
                
                // Prevent multiple clicks
                if ($button.prop('disabled')) {
                    return;
                }
                
                // Disable button temporarily
                $button.prop('disabled', true);
                
                $.ajax({
                    url: '@Url.Action("MarkReviewHelpful", "Game")',
                    type: 'POST',
                    data: { reviewId: reviewId },
                    success: function(response) {
                        if (response.success) {
                            const $count = $button.find('.helpful-count');
                            $count.text('(' + response.helpfulCount + ')');
                            
                            if (response.isHelpful) {
                                $button.addClass('active');
                            } else {
                                $button.removeClass('active');
                            }
                        }
                        
                        // Re-enable button
                        setTimeout(() => {
                            $button.prop('disabled', false);
                        }, 500);
                    },
                    error: function() {
                        // Re-enable button
                        $button.prop('disabled', false);
                        alert('Chức năng đang trong quá trình phát triển. Vui lòng thử lại sau! (^_^)');
                    }
                });
            });
            
            // Review sorting
            $('.review-sort-select').on('change', function() {
                const sortValue = $(this).val();
                
                // Here you would typically make an AJAX call to reload sorted reviews
                // For now we'll just simulate a reload with animation
                $('#reviewsList .review-card').addClass('opacity-50');
                
                setTimeout(function() {
                    // This would be replaced with actual sorted data
                    $('#reviewsList .review-card').removeClass('opacity-50');
                }, 500);
            });
        });
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/game-details.css" />
}